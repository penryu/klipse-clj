["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$clojure.core.protocols","~:imports",null,"~:requires",null,"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$Datafiable",["^ ","~:meta",["^ ","~:protocol-symbol",true,"~:file","/Users/penryu/code/github/klipse-clj/target/public/cljs-out/test/clojure/core/protocols.cljs","~:end-column",24,"~:column",14,"~:line",11,"~:protocol-info",["^ ","~:methods",["^ ","~$datafy",[["~$o"]]]],"~:extend-via-metadata",true,"~:end-line",11,"~:sigs",["^ ","~:datafy",["^ ","^5","^E","~:arglists",["~#list",[["~$o"]]],"~:doc","return a representation of o as data (default identity)"]],"~:jsdoc",["^K",["@interface"]]],"^>",true,"^5","~$clojure.core.protocols/Datafiable","^?","target/public/cljs-out/test/clojure/core/protocols.cljs","^@",24,"^A",1,"^B",11,"^C",["^ ","^D",["^ ","^E",[["~$o"]]]],"^F",true,"~:info",null,"^G",11,"~:tag","~$any","^H",["^ ","^I",["^ ","^5","^E","^J",["^K",[["~$o"]]],"^L","return a representation of o as data (default identity)"]],"~:impls",["^4",[null,"~$default"]],"^M",["^K",["@interface"]]],"^E",["^ ","~:protocol-inline",null,"^=",["^ ","^?","/Users/penryu/code/github/klipse-clj/target/public/cljs-out/test/clojure/core/protocols.cljs","^B",13,"^A",4,"^G",13,"^@",10,"~:protocol","^N","^L","return a representation of o as data (default identity)","^J",["^K",["~$quote",["^K",[["~$o"]]]]]],"^U","^N","^5","~$clojure.core.protocols/datafy","^?","target/public/cljs-out/test/clojure/core/protocols.cljs","^@",10,"~:method-params",["^K",[["~$o"]]],"~:protocol-impl",null,"~:arglists-meta",["^K",[null,null]],"^A",1,"~:variadic?",false,"^B",11,"~:ret-tag","^Q","^G",13,"~:max-fixed-arity",1,"~:fn-var",true,"^J",["^K",["^V",["^K",[["~$o"]]]]],"^L","return a representation of o as data (default identity)"],"~$Navigable",["^ ","^=",["^ ","^>",true,"^?","/Users/penryu/code/github/klipse-clj/target/public/cljs-out/test/clojure/core/protocols.cljs","^@",23,"^A",14,"^B",22,"^C",["^ ","^D",["^ ","~$nav",[["~$coll","~$k","~$v"]]]],"^F",true,"^G",22,"^H",["^ ","~:nav",["^ ","^5","^14","^J",["^K",[["^15","~$k","~$v"]]],"^L","return (possibly transformed) v in the context of coll and k (a key/index or nil),\ndefaults to returning v."]],"^M",["^K",["@interface"]]],"^>",true,"^5","~$clojure.core.protocols/Navigable","^?","target/public/cljs-out/test/clojure/core/protocols.cljs","^@",23,"^A",1,"^B",22,"^C",["^ ","^D",["^ ","^14",[["^15","~$k","~$v"]]]],"^F",true,"^O",null,"^G",22,"^P","^Q","^H",["^ ","^16",["^ ","^5","^14","^J",["^K",[["^15","~$k","~$v"]]],"^L","return (possibly transformed) v in the context of coll and k (a key/index or nil),\ndefaults to returning v."]],"^R",["^4",["^S"]],"^M",["^K",["@interface"]]],"^14",["^ ","^T",null,"^=",["^ ","^?","/Users/penryu/code/github/klipse-clj/target/public/cljs-out/test/clojure/core/protocols.cljs","^B",24,"^A",4,"^G",24,"^@",7,"^U","^17","^L","return (possibly transformed) v in the context of coll and k (a key/index or nil),\ndefaults to returning v.","^J",["^K",["^V",["^K",[["^15","~$k","~$v"]]]]]],"^U","^17","^5","~$clojure.core.protocols/nav","^?","target/public/cljs-out/test/clojure/core/protocols.cljs","^@",7,"^X",["^K",[["^15","~$k","~$v"]]],"^Y",null,"^Z",["^K",[null,null]],"^A",1,"^[",false,"^B",22,"^10","^Q","^G",24,"^11",3,"^12",true,"^J",["^K",["^V",["^K",[["^15","~$k","~$v"]]]]],"^L","return (possibly transformed) v in the context of coll and k (a key/index or nil),\ndefaults to returning v."]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:cljs.analyzer/no-resolve","^18","^W"]],"~:order",["^W","^1=","^18"]],"^L",null,"~:as-aliases",["^ "]]