["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$klipse-clj.lang.cljs-repl","~:imports",null,"~:requires",["^ ","~$spec","~$cljs.spec.alpha","^:","^:","~$gstring","~$goog.string","^<","^<","~$goog.string.format","^="],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$Error->map",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/Users/penryu/code/github/klipse-clj/src/klipse_clj/lang/cljs_repl.cljs","~:line",6,"~:column",7,"~:end-line",6,"~:end-column",17,"~:arglists",["~#list",["~$quote",["^J",[["~$o"]]]]],"~:doc","Constructs a data representation for a Error with keys:\n    :cause - root cause message\n    :phase - error phase\n    :via - cause chain, with cause keys:\n             :type - exception class symbol\n             :message - exception message\n             :data - ex-data\n             :at - top stack element\n    :trace - root cause stack elements"],"^5","~$klipse-clj.lang.cljs-repl/Error->map","^D","src/klipse_clj/lang/cljs_repl.cljs","^H",17,"~:method-params",["^J",[["~$o"]]],"~:protocol-impl",null,"~:arglists-meta",["^J",[null,null]],"^F",1,"~:variadic?",false,"^E",6,"~:ret-tag",["^4",[null,"~$any","~$clj-nil"]],"^G",6,"~:max-fixed-arity",1,"~:fn-var",true,"^I",["^J",["^K",["^J",[["~$o"]]]]],"^L","Constructs a data representation for a Error with keys:\n    :cause - root cause message\n    :phase - error phase\n    :via - cause chain, with cause keys:\n             :type - exception class symbol\n             :message - exception message\n             :data - ex-data\n             :at - top stack element\n    :trace - root cause stack elements"],"~$ex-triage",["^ ","^B",null,"^C",["^ ","^D","/Users/penryu/code/github/klipse-clj/src/klipse_clj/lang/cljs_repl.cljs","^E",48,"^F",7,"^G",48,"^H",16,"^I",["^J",["^K",["^J",[["~$datafied-throwable"]]]]],"^L","Returns an analysis of the phase, error, cause, and location of an error that occurred\n  based on Throwable data, as returned by Throwable->map. All attributes other than phase\n  are optional:\n    :clojure.error/phase - keyword phase indicator, one of:\n      :read-source :compile-syntax-check :compilation :macro-syntax-check :macroexpansion\n      :execution :read-eval-result :print-eval-result\n    :clojure.error/source - file name (no path)\n    :clojure.error/line - integer line number\n    :clojure.error/column - integer column number\n    :clojure.error/symbol - symbol being expanded/compiled/invoked\n    :clojure.error/class - cause exception class symbol\n    :clojure.error/cause - cause exception message\n    :clojure.error/spec - explain-data for spec error"],"^5","~$klipse-clj.lang.cljs-repl/ex-triage","^D","src/klipse_clj/lang/cljs_repl.cljs","^H",16,"^N",["^J",[["^X"]]],"^O",null,"^P",["^J",[null,null]],"^F",1,"^Q",false,"^E",48,"^R",["^4",["~$clj","^S"]],"^G",48,"^U",1,"^V",true,"^I",["^J",["^K",["^J",[["^X"]]]]],"^L","Returns an analysis of the phase, error, cause, and location of an error that occurred\n  based on Throwable data, as returned by Throwable->map. All attributes other than phase\n  are optional:\n    :clojure.error/phase - keyword phase indicator, one of:\n      :read-source :compile-syntax-check :compilation :macro-syntax-check :macroexpansion\n      :execution :read-eval-result :print-eval-result\n    :clojure.error/source - file name (no path)\n    :clojure.error/line - integer line number\n    :clojure.error/column - integer column number\n    :clojure.error/symbol - symbol being expanded/compiled/invoked\n    :clojure.error/class - cause exception class symbol\n    :clojure.error/cause - cause exception message\n    :clojure.error/spec - explain-data for spec error"],"~$ex-str",["^ ","^B",null,"^C",["^ ","^D","/Users/penryu/code/github/klipse-clj/src/klipse_clj/lang/cljs_repl.cljs","^E",105,"^F",7,"^G",105,"^H",13,"^I",["^J",["^K",["^J",[[["^ ","~:clojure.error/keys",["~$phase","~$source","~$line","~$column","~$symbol","~$class","~$cause","^9"],"~:as","~$triage-data"]]]]]],"^L","Returns a string from exception data, as produced by ex-triage.\n  The first line summarizes the exception phase and location.\n  The subsequent lines describe the cause."],"^5","~$klipse-clj.lang.cljs-repl/ex-str","^D","src/klipse_clj/lang/cljs_repl.cljs","^H",13,"^N",["^J",[["~$p__11454"]]],"^O",null,"^P",["^J",[null,null]],"^F",1,"^Q",false,"^E",105,"^G",105,"^U",1,"^V",true,"^I",["^J",["^K",["^J",[[["^ ","^10",["^11","^12","^13","^14","^15","^16","^17","^9"],"^18","^19"]]]]]],"^L","Returns a string from exception data, as produced by ex-triage.\n  The first line summarizes the exception phase and location.\n  The subsequent lines describe the cause."],"~$error->str",["^ ","^B",null,"^C",["^ ","^D","/Users/penryu/code/github/klipse-clj/src/klipse_clj/lang/cljs_repl.cljs","^E",178,"^F",7,"^G",178,"^H",17,"^I",["^J",["^K",["^J",[["~$error"]]]]]],"^5","~$klipse-clj.lang.cljs-repl/error->str","^D","src/klipse_clj/lang/cljs_repl.cljs","^H",17,"^N",["^J",[["^1="]]],"^O",null,"^P",["^J",[null,null]],"^F",1,"^Q",false,"^E",178,"^R","^S","^G",178,"^U",1,"^V",true,"^I",["^J",["^K",["^J",[["^1="]]]]]]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^9","^:","^:","^:"],"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:cljs.spec.alpha/caller","~:clojure.error/cause","~:cause","~:execution","~$js/EvalError","~:else","~:clojure.error/phase","~$js/URIError","~:via","~$js/ReferenceError","~:trace","~:clojure.error/symbol","^D","~:phase","~:type","~:cljs.spec.alpha/problems","~$ExceptionInfo","~$js/SyntaxError","~:clojure.error/column","~:clojure.error/line","~:clojure.error/class","~:clojure.error/source","^E","~:clojure.error/spec","~$js/RangeError","~:cljs.spec.alpha/fn","~$js/Error","~:message","~:in","~:data"]],"~:order",["^1P","^1R","^1G","^1Y","^1L","^1S","^1J","^1[","^1H","^20","^22","^1K","^1M","^1E","^1I","^1O","^1F","^1Q","^1Z","^1C","^1W","^1U","^1T","^1D","^1V","^1X","^1N","^D","^E","^21"]],"^L",null,"~:as-aliases",["^ "]]