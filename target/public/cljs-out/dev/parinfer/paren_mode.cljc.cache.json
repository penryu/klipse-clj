["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ ","~$join","~$clojure.string"],"~:excludes",["~#set",[]],"~:name","~$parinfer.paren-mode","~:imports",null,"~:requires",["^ ","~$parinfer.reader","^;","~$parinfer.indent-mode","^<","~$parinfer.string","^=","^4","^4"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$whitespace?","^;","~$insert-string","^=","^3","^4","~$in-code?","^;","~$update-line","^<","~$valid-closer?","^;","~$update-insertion-pt","^<","~$remove-delim-trail","^<","~$process-char*","^<","~$update-delim-trail","^<","~$closing-delim?","^;","~$in-str?","^;","~$matching-delim","^;","~$get-lines","^="],"~:defs",["^ ","~$initial-state",["^ ","~:meta",["^ ","~:file","/Users/penryu/code/github/klipse-clj/target/public/cljs-out/dev/parinfer/paren_mode.cljc","~:line",20,"~:column",6,"~:end-line",20,"~:end-column",19],"^7","~$parinfer.paren-mode/initial-state","^P","target/public/cljs-out/dev/parinfer/paren_mode.cljc","^T",19,"^R",1,"^Q",20,"^S",20,"~:tag","~$cljs.core/IMap","~:doc","An initial state of our running state."],"~$process-text",["^ ","~:protocol-inline",null,"^O",["^ ","^P","/Users/penryu/code/github/klipse-clj/target/public/cljs-out/dev/parinfer/paren_mode.cljc","^Q",154,"^R",7,"^S",154,"^T",19,"~:arglists",["~#list",["~$quote",["^10",[["~$text"],["^12","~$options"]]]]],"^X","Update the state by processing the given text.","~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[["^12"],["^12","^13"]],"^[",["^10",[["^12"],["^12","^13"]]],"~:arglists-meta",["^10",[null,null]]]],"^7","~$parinfer.paren-mode/process-text","^P","target/public/cljs-out/dev/parinfer/paren_mode.cljc","^T",19,"^14",["^ ","^15",false,"^16",2,"^17",2,"^18",[["^12"],["^12","^13"]],"^[",["^10",[["^12"],["^12","^13"]]],"^19",["^10",[null,null]]],"^18",[["^12"],["^12","^13"]],"~:protocol-impl",null,"^16",2,"^19",["^10",[null,null]],"^R",1,"^15",false,"~:methods",[["^ ","^16",1,"^15",false,"^V","~$any"],["^ ","^16",2,"^15",false,"^V",["^6",["~$clj","^1="]]]],"^Q",154,"^S",154,"^17",2,"~:fn-var",true,"^[",["^10",[["^12"],["^12","^13"]]],"^X","Update the state by processing the given text."],"~$process-indent",["^ ","^Z",null,"^O",["^ ","^P","/Users/penryu/code/github/klipse-clj/target/public/cljs-out/dev/parinfer/paren_mode.cljc","^Q",81,"^R",7,"^S",81,"^T",21,"^[",["^10",["^11",["^10",[[["^ ","~:keys",["~$stack","~$track-indent?","~$lines","~$line-no","~$ch","~$x-pos","~$cursor-line","~$cursor-x","~$cursor-dx"],"~:as","~$state"]]]]]],"^X","Update the state by handling a possible indentation trigger."],"^7","~$parinfer.paren-mode/process-indent","^P","target/public/cljs-out/dev/parinfer/paren_mode.cljc","^T",21,"^18",["^10",[["~$p__28358"]]],"^1;",null,"^19",["^10",[null,null]],"^R",1,"^15",false,"^Q",81,"~:ret-tag",["^6",[null,"^1>","^1=","~$clj-nil"]],"^S",81,"^17",1,"^1?",true,"^[",["^10",["^11",["^10",[[["^ ","^1A",["^1B","^1C","^1D","^1E","^1F","^1G","^1H","^1I","^1J"],"^1K","^1L"]]]]]],"^X","Update the state by handling a possible indentation trigger."],"~$append-delim-trail",["^ ","^Z",null,"^O",["^ ","^P","/Users/penryu/code/github/klipse-clj/target/public/cljs-out/dev/parinfer/paren_mode.cljc","^Q",33,"^R",7,"^S",33,"^T",25,"^[",["^10",["^11",["^10",[[["^ ","^1A",["^1B","^1E","~$insert"],"^1K","^1L"]]]]]]],"^7","~$parinfer.paren-mode/append-delim-trail","^P","target/public/cljs-out/dev/parinfer/paren_mode.cljc","^T",25,"^18",["^10",[["~$p__28347"]]],"^1;",null,"^19",["^10",[null,null]],"^R",1,"^15",false,"^Q",33,"^1O",["^6",["^1>","^1="]],"^S",33,"^17",1,"^1?",true,"^[",["^10",["^11",["^10",[[["^ ","^1A",["^1B","^1E","^1R"],"^1K","^1L"]]]]]]],"~$handle-cursor-delta",["^ ","^Z",null,"^O",["^ ","^P","/Users/penryu/code/github/klipse-clj/target/public/cljs-out/dev/parinfer/paren_mode.cljc","^Q",73,"^R",7,"^S",73,"^T",26,"^[",["^10",["^11",["^10",[[["^ ","^1A",["~$indent-delta","^1E","^1G","^1H","^1I","^1J"],"^1K","^1L"]]]]]]],"^7","~$parinfer.paren-mode/handle-cursor-delta","^P","target/public/cljs-out/dev/parinfer/paren_mode.cljc","^T",26,"^18",["^10",[["~$p__28355"]]],"^1;",null,"^19",["^10",[null,null]],"^R",1,"^15",false,"^Q",73,"^1O",["^6",[null,"^1>","^1=","^1P"]],"^S",73,"^17",1,"^1?",true,"^[",["^10",["^11",["^10",[[["^ ","^1A",["^1V","^1E","^1G","^1H","^1I","^1J"],"^1K","^1L"]]]]]]],"~$min-dedent",["^ ","^Z",null,"^O",["^ ","^P","/Users/penryu/code/github/klipse-clj/target/public/cljs-out/dev/parinfer/paren_mode.cljc","^Q",51,"^R",7,"^S",51,"^T",17,"^[",["^10",["^11",["^10",[["~$x",["^ ","^1A",["~$dedent-x"]]]]]]]],"^7","~$parinfer.paren-mode/min-dedent","^P","target/public/cljs-out/dev/parinfer/paren_mode.cljc","^T",17,"^18",["^10",[["~$x","~$p__28351"]]],"^1;",null,"^19",["^10",[null,null]],"^R",1,"^15",false,"^Q",51,"^1O",["^6",[null,"^1="]],"^S",51,"^17",2,"^1?",true,"^[",["^10",["^11",["^10",[["~$x",["^ ","^1A",["^1Z"]]]]]]]],"~$correct-indent",["^ ","^Z",null,"^O",["^ ","^P","/Users/penryu/code/github/klipse-clj/target/public/cljs-out/dev/parinfer/paren_mode.cljc","^Q",57,"^R",7,"^S",57,"^T",21,"^[",["^10",["^11",["^10",[[["^ ","^1A",["^1V","^1G","^1B","^1Z","^1E"],"^1K","^1L"]]]]]]],"^7","~$parinfer.paren-mode/correct-indent","^P","target/public/cljs-out/dev/parinfer/paren_mode.cljc","^T",21,"^18",["^10",[["~$p__28353"]]],"^1;",null,"^19",["^10",[null,null]],"^R",1,"^15",false,"^Q",57,"^1O",["^6",["^1>","^1="]],"^S",57,"^17",1,"^1?",true,"^[",["^10",["^11",["^10",[[["^ ","^1A",["^1V","^1G","^1B","^1Z","^1E"],"^1K","^1L"]]]]]]],"~$reinsert-delims",["^ ","^Z",null,"^O",["^ ","^P","/Users/penryu/code/github/klipse-clj/target/public/cljs-out/dev/parinfer/paren_mode.cljc","^Q",115,"^R",7,"^S",115,"^T",22,"^[",["^10",["^11",["^10",[[["^ ","^1A",["~$removed-delims"],"^1K","^1L"]]]]]]],"^7","~$parinfer.paren-mode/reinsert-delims","^P","target/public/cljs-out/dev/parinfer/paren_mode.cljc","^T",22,"^18",["^10",[["~$p__28364"]]],"^1;",null,"^19",["^10",[null,null]],"^R",1,"^15",false,"^Q",115,"^1O",["^6",[null,"^1="]],"^S",115,"^17",1,"^1?",true,"^[",["^10",["^11",["^10",[[["^ ","^1A",["^25"],"^1K","^1L"]]]]]]],"~$min-indent",["^ ","^Z",null,"^O",["^ ","^P","/Users/penryu/code/github/klipse-clj/target/public/cljs-out/dev/parinfer/paren_mode.cljc","^Q",44,"^R",7,"^S",44,"^T",17,"^[",["^10",["^11",["^10",[["~$x",["^ ","^1A",["^1B"]]]]]]]],"^7","~$parinfer.paren-mode/min-indent","^P","target/public/cljs-out/dev/parinfer/paren_mode.cljc","^T",17,"^18",["^10",[["~$x","~$p__28349"]]],"^1;",null,"^19",["^10",[null,null]],"^R",1,"^15",false,"^Q",44,"^1O",["^6",[null,"^1="]],"^S",44,"^17",2,"^1?",true,"^[",["^10",["^11",["^10",[["~$x",["^ ","^1A",["^1B"]]]]]]]],"~$process-line",["^ ","^Z",null,"^O",["^ ","^P","/Users/penryu/code/github/klipse-clj/target/public/cljs-out/dev/parinfer/paren_mode.cljc","^Q",123,"^R",7,"^S",123,"^T",19,"^[",["^10",["^11",["^10",[["~$line"],[["^ ","^1A",["^1B","^1D","^1E","^1H"],"^1K","^1L"],"^2<"]]]]],"^X","Update the state by processing the given line of text.","^14",["^ ","^15",false,"^16",2,"^17",2,"^18",[["^2<"],[["^ ","^1A",["^1B","^1D","^1E","^1H"],"^1K","^1L"],"^2<"]],"^[",["^10",[["^2<"],[["^ ","^1A",["^1B","^1D","^1E","^1H"],"^1K","^1L"],"^2<"]]],"^19",["^10",[null,null]]]],"^7","~$parinfer.paren-mode/process-line","^P","target/public/cljs-out/dev/parinfer/paren_mode.cljc","^T",19,"^14",["^ ","^15",false,"^16",2,"^17",2,"^18",[["^2<"],[["^ ","^1A",["^1B","^1D","^1E","^1H"],"^1K","^1L"],"^2<"]],"^[",["^10",[["^2<"],[["^ ","^1A",["^1B","^1D","^1E","^1H"],"^1K","^1L"],"^2<"]]],"^19",["^10",[null,null]]],"^18",[["^2<"],[["^ ","^1A",["^1B","^1D","^1E","^1H"],"^1K","^1L"],"^2<"]],"^1;",null,"^16",2,"^19",["^10",[null,null]],"^R",1,"^15",false,"^1<",[["^ ","^16",1,"^15",false,"^V","^1="],["^ ","^16",2,"^15",false,"^V",["^6",[null,"^1="]]]],"^Q",123,"^S",123,"^17",2,"^1?",true,"^[",["^10",[["^2<"],[["^ ","^1A",["^1B","^1D","^1E","^1H"],"^1K","^1L"],"^2<"]]],"^X","Update the state by processing the given line of text."],"~$finalize-state",["^ ","^Z",null,"^O",["^ ","^P","/Users/penryu/code/github/klipse-clj/target/public/cljs-out/dev/parinfer/paren_mode.cljc","^Q",149,"^R",7,"^S",149,"^T",21,"^[",["^10",["^11",["^10",[[["^ ","^1A",["^1B"],"^1K","^1L"]]]]]]],"^7","~$parinfer.paren-mode/finalize-state","^P","target/public/cljs-out/dev/parinfer/paren_mode.cljc","^T",21,"^18",["^10",[["~$p__28372"]]],"^1;",null,"^19",["^10",[null,null]],"^R",1,"^15",false,"^Q",149,"^1O",["^6",["^1>","^1="]],"^S",149,"^17",1,"^1?",true,"^[",["^10",["^11",["^10",[[["^ ","^1A",["^1B"],"^1K","^1L"]]]]]]],"~$process-char",["^ ","^Z",null,"^O",["^ ","^P","/Users/penryu/code/github/klipse-clj/target/public/cljs-out/dev/parinfer/paren_mode.cljc","^Q",106,"^R",7,"^S",106,"^T",19,"^[",["^10",["^11",["^10",[[["^ ","^1A",["^1D","^1E"],"^1K","^1L"],"^1F"]]]]],"^X","Update the state by processing the given character and its position."],"^7","~$parinfer.paren-mode/process-char","^P","target/public/cljs-out/dev/parinfer/paren_mode.cljc","^T",19,"^18",["^10",[["~$p__28361","^1F"]]],"^1;",null,"^19",["^10",[null,null]],"^R",1,"^15",false,"^Q",106,"^1O",["^6",[null,"^1>","^1=","^1P"]],"^S",106,"^17",2,"^1?",true,"^[",["^10",["^11",["^10",[[["^ ","^1A",["^1D","^1E"],"^1K","^1L"],"^1F"]]]]],"^X","Update the state by processing the given character and its position."],"~$format-text",["^ ","^Z",null,"^O",["^ ","^P","/Users/penryu/code/github/klipse-clj/target/public/cljs-out/dev/parinfer/paren_mode.cljc","^Q",164,"^R",7,"^S",164,"^T",18,"^[",["^10",["^11",["^10",[["^12"],["^12","^13"]]]]],"^X","Fully process the given text using Paren Mode.\n\n  'text' is the full text.\n\n  'options' is an optional map with supported keys:\n    :cursor-x     - x position of the cursor (zero-based)\n    :cursor-line  - line number of the cursor (zero-based)\n\n  Returns a map:\n    :text     - full text output\n    :valid?   - indicates if the input was valid\n    :state    - cached state to be passed to `format-text-change` (once it is implemented)\n  ","^14",["^ ","^15",false,"^16",2,"^17",2,"^18",[["^12"],["^12","^13"]],"^[",["^10",[["^12"],["^12","^13"]]],"^19",["^10",[null,null]]]],"^7","~$parinfer.paren-mode/format-text","^P","target/public/cljs-out/dev/parinfer/paren_mode.cljc","^T",18,"^14",["^ ","^15",false,"^16",2,"^17",2,"^18",[["^12"],["^12","^13"]],"^[",["^10",[["^12"],["^12","^13"]]],"^19",["^10",[null,null]]],"^18",[["^12"],["^12","^13"]],"^1;",null,"^16",2,"^19",["^10",[null,null]],"^R",1,"^15",false,"^1<",[["^ ","^16",1,"^15",false,"^V","^1="],["^ ","^16",2,"^15",false,"^V","^W"]],"^Q",164,"^S",164,"^17",2,"^1?",true,"^[",["^10",[["^12"],["^12","^13"]]],"^X","Fully process the given text using Paren Mode.\n\n  'text' is the full text.\n\n  'options' is an optional map with supported keys:\n    :cursor-x     - x position of the cursor (zero-based)\n    :cursor-line  - line number of the cursor (zero-based)\n\n  Returns a map:\n    :text     - full text output\n    :valid?   - indicates if the input was valid\n    :state    - cached state to be passed to `format-text-change` (once it is implemented)\n  "]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:cursor-line","~:backup","~:insert","~:valid?","~:process?","~:x-pos","~:cursor-x","~:dedent-x","~:start","~:lines","~:state","~:ch","~:cursor-dx","~:track-indent?","~:line-no","~:stack","~:delim-trail","~:indent-delta","~:removed-delims","~:end","~:line-dy","~:text","~:cursor-in-comment?"]],"~:order",["^2K","^2L","^2Q","^2S","^2W","^2X","^2Y","^2Z","^2[","^32","^2O","^2R","^31","^2U","^2J","^2P","^2V","^2N","^30","^34","^2M","^33","^2T"]],"^X","Corrects indentation based on parens.\n  See http://shaunlebron.github.io/parinfer/#paren-mode","~:as-aliases",["^ "]]